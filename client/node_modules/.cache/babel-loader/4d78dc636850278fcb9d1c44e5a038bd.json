{"remainingRequest":"C:\\Users\\krman\\Desktop\\django-vue-admin\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\krman\\Desktop\\django-vue-admin\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\krman\\Desktop\\django-vue-admin\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\krman\\Desktop\\django-vue-admin\\client\\src\\views\\system\\task.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\krman\\Desktop\\django-vue-admin\\client\\src\\views\\system\\task.vue","mtime":1622036885224},{"path":"C:\\Users\\krman\\Desktop\\django-vue-admin\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1622036861552},{"path":"C:\\Users\\krman\\Desktop\\django-vue-admin\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1622036860239},{"path":"C:\\Users\\krman\\Desktop\\django-vue-admin\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1622036861552},{"path":"C:\\Users\\krman\\Desktop\\django-vue-admin\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1622036883575}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"C:/Users/krman/Desktop/django-vue-admin/client/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"C:/Users/krman/Desktop/django-vue-admin/client/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _task = require(\"@/api/task\");\n\nvar _Pagination = _interopRequireDefault(require(\"@/components/Pagination\"));\n\nvar _permission = _interopRequireDefault(require(\"@/utils/permission\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar defaultptask = {\n  timetype: \"interval\",\n  interval_: {\n    every: 1,\n    period: \"minutes\"\n  },\n  crontab_: {}\n};\nvar _default = {\n  components: {\n    Pagination: _Pagination.default\n  },\n  data: function data() {\n    return {\n      dialogVisible: false,\n      dialogType: \"create\",\n      ptask: defaultptask,\n      dataList: {\n        count: 0\n      },\n      listLoading: true,\n      listQuery: {\n        page: 1,\n        page_size: 20\n      },\n      enabledOptions: [{\n        key: \"true\",\n        display_name: \"启用\"\n      }, {\n        key: \"false\",\n        display_name: \"禁用\"\n      }],\n      rule1: {\n        name: [{\n          required: true,\n          message: \"请输入\",\n          trigger: \"blur\"\n        }],\n        task: [{\n          required: true,\n          message: \"请输入\",\n          trigger: \"blur\"\n        }]\n      },\n      rule2: {\n        name: [{\n          required: true,\n          message: \"请输入\",\n          trigger: \"blur\"\n        }],\n        task: [{\n          required: true,\n          message: \"请输入\",\n          trigger: \"blur\"\n        }],\n        'crontab_.minute': [{\n          required: true,\n          message: \"请输入\",\n          trigger: \"blur\"\n        }],\n        'crontab_.hour': [{\n          required: true,\n          message: \"请输入\",\n          trigger: \"blur\"\n        }],\n        'crontab_.day_of_week': [{\n          required: true,\n          message: \"请输入\",\n          trigger: \"blur\"\n        }],\n        'crontab_.day_of_month': [{\n          required: true,\n          message: \"请输入\",\n          trigger: \"blur\"\n        }],\n        'crontab_.month_of_year': [{\n          required: true,\n          message: \"请输入\",\n          trigger: \"blur\"\n        }]\n      },\n      periodOptions: [{\n        value: \"days\",\n        label: \"天\"\n      }, {\n        value: \"hours\",\n        label: \"小时\"\n      }, {\n        value: \"minutes\",\n        label: \"分钟\"\n      }, {\n        value: \"seconds\",\n        label: \"秒\"\n      }]\n    };\n  },\n  computed: {\n    dynamicRules: function dynamicRules() {\n      return this.timetype == 'interval' ? this.rule1 : this.rule2;\n    }\n  },\n  created: function created() {\n    this.getList();\n  },\n  methods: {\n    checkPermission: _permission.default,\n    getList: function getList() {\n      var _this = this;\n\n      this.listLoading = true;\n      (0, _task.getptaskList)(this.listQuery).then(function (response) {\n        if (response.data) {\n          _this.dataList = response.data;\n        }\n\n        _this.listLoading = false;\n      });\n    },\n    resetFilter: function resetFilter() {\n      this.listQuery = {\n        page: 1,\n        page_size: 20\n      };\n      this.getList();\n    },\n    handleFilter: function handleFilter() {\n      this.listQuery.page = 1;\n      this.getList();\n    },\n    handleCreate: function handleCreate() {\n      var _this2 = this;\n\n      this.ptask = Object.assign({}, defaultptask);\n      this.dialogType = \"create\";\n      this.dialogVisible = true;\n      this.$nextTick(function () {\n        _this2.$refs[\"Form\"].clearValidate();\n      });\n    },\n    handleUpdate: function handleUpdate(scope) {\n      var _this3 = this;\n\n      this.ptask = Object.assign({}, scope.row); // copy obj\n\n      if (!this.ptask.interval_) {\n        this.ptask.interval_ = {};\n      }\n\n      if (!this.ptask.crontab_) {\n        this.ptask.crontab_ = {};\n      }\n\n      this.dialogType = 'update';\n      this.dialogVisible = true;\n      this.$nextTick(function () {\n        _this3.$refs['Form'].clearValidate();\n      });\n    },\n    handleDelete: function handleDelete(scope) {\n      var _this4 = this;\n\n      this.$confirm('确认删除?', '警告', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'error'\n      }).then( /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _task.deleteptask)(scope.row.id);\n\n              case 2:\n                _this4.getList();\n\n                _this4.$message.success('成功');\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))).catch(function (err) {\n        console.error(err);\n      });\n    },\n    handleToggle: function handleToggle(scope) {\n      var _this5 = this;\n\n      (0, _task.toggletask)(scope.row.id).then(function (res) {\n        _this5.$message.success('成功');\n      }).catch(function (e) {\n        _this5.getList();\n      });\n    },\n    confirmForm: function confirmForm() {\n      var _this6 = this;\n\n      this.$refs[\"Form\"].validate(function (valid) {\n        if (valid) {\n          var isEdit = _this6.dialogType === 'update';\n\n          if (isEdit) {\n            (0, _task.updateptask)(_this6.ptask.id, _this6.ptask).then(function () {\n              _this6.getList();\n\n              _this6.dialogVisible = false;\n\n              _this6.$message.success('成功');\n            });\n          } else {\n            (0, _task.createptask)(_this6.ptask).then(function (res) {\n              _this6.getList();\n\n              _this6.dialogVisible = false;\n\n              _this6.$message.success('成功');\n            });\n          }\n        } else {\n          return false;\n        }\n      });\n    }\n  }\n};\nexports.default = _default;",null]}