{"remainingRequest":"C:\\Users\\krman\\Desktop\\django-vue-admin\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\krman\\Desktop\\django-vue-admin\\client\\src\\views\\system\\task.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\krman\\Desktop\\django-vue-admin\\client\\src\\views\\system\\task.vue","mtime":1619358257339},{"path":"C:\\Users\\krman\\Desktop\\django-vue-admin\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\krman\\Desktop\\django-vue-admin\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\krman\\Desktop\\django-vue-admin\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\krman\\Desktop\\django-vue-admin\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getptaskList, createptask, updateptask, deleteptask, toggletask } from \"@/api/task\";\nimport Pagination from \"@/components/Pagination\";\nimport checkPermission from \"@/utils/permission\";\nconst defaultptask = {\n  timetype: \"interval\",\n  interval_: {\n    every: 1,\n    period: \"minutes\",\n  },\n  crontab_: {},\n};\nexport default {\n  components: { Pagination },\n  data() {\n    return {\n      dialogVisible: false,\n      dialogType: \"create\",\n      ptask: defaultptask,\n      dataList: { count: 0 },\n      listLoading: true,\n      listQuery: {\n        page: 1,\n        page_size: 20,\n      },\n      enabledOptions: [\n        { key: \"true\", display_name: \"启用\" },\n        { key: \"false\", display_name: \"禁用\" },\n      ],\n      rule1: {\n        name: [{ required: true, message: \"请输入\", trigger: \"blur\" }],\n        task: [{ required: true, message: \"请输入\", trigger: \"blur\" }],\n      },\n      rule2: {\n        name: [{ required: true, message: \"请输入\", trigger: \"blur\" }],\n        task: [{ required: true, message: \"请输入\", trigger: \"blur\" }],\n        'crontab_.minute':[{ required: true, message: \"请输入\", trigger: \"blur\" }],\n        'crontab_.hour':[{ required: true, message: \"请输入\", trigger: \"blur\" }],\n        'crontab_.day_of_week':[{ required: true, message: \"请输入\", trigger: \"blur\" }],\n        'crontab_.day_of_month':[{ required: true, message: \"请输入\", trigger: \"blur\" }],\n        'crontab_.month_of_year':[{ required: true, message: \"请输入\", trigger: \"blur\" }]\n      },\n      periodOptions: [\n        {\n          value: \"days\",\n          label: \"天\",\n        },\n        {\n          value: \"hours\",\n          label: \"小时\",\n        },\n        {\n          value: \"minutes\",\n          label: \"分钟\",\n        },\n        {\n          value: \"seconds\",\n          label: \"秒\",\n        },\n      ],\n    };\n  },\n  computed:{\n    dynamicRules(){\n      return this.timetype == 'interval'? this.rule1: this.rule2\n    }\n  },\n  created() {\n    this.getList();\n  },\n  methods: {\n    checkPermission,\n    getList() {\n      this.listLoading = true;\n      getptaskList(this.listQuery).then((response) => {\n        if (response.data) {\n          this.dataList = response.data;\n        }\n        this.listLoading = false;\n      });\n    },\n    resetFilter() {\n      this.listQuery = {\n        page: 1,\n        page_size: 20,\n      };\n      this.getList();\n    },\n    handleFilter() {\n      this.listQuery.page = 1;\n      this.getList();\n    },\n    handleCreate() {\n      this.ptask = Object.assign({}, defaultptask);\n      this.dialogType = \"create\";\n      this.dialogVisible = true;\n      this.$nextTick(() => {\n        this.$refs[\"Form\"].clearValidate();\n      });\n    },\n    handleUpdate(scope) {\n      this.ptask = Object.assign({}, scope.row) // copy obj\n      if(!this.ptask.interval_){this.ptask.interval_ = {}}\n      if(!this.ptask.crontab_){this.ptask.crontab_ = {}}\n      this.dialogType = 'update'\n      this.dialogVisible = true\n      this.$nextTick(() => {\n        this.$refs['Form'].clearValidate()\n      })\n    },\n    handleDelete(scope) {\n      this.$confirm('确认删除?', '警告', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'error'\n      })\n        .then(async() => {\n          await deleteptask(scope.row.id)\n          this.getList()\n          this.$message.success('成功')\n        })\n        .catch(err => {\n          console.error(err)\n        })\n    },\n    handleToggle(scope) {\n      toggletask(scope.row.id).then(res=>{\n        this.$message.success('成功')\n      }).catch(e=>{\n        this.getList()\n      })\n    },\n    confirmForm() {\nthis.$refs[\"Form\"].validate(valid => {\n        if (valid) {\n          const isEdit = this.dialogType === 'update'\n          if (isEdit) {\n            updateptask(this.ptask.id, this.ptask).then(() => {\n              this.getList()\n              this.dialogVisible = false\n              this.$message.success('成功')\n            })\n          } else {\n            createptask(this.ptask).then(res => {\n              this.getList()\n              this.dialogVisible = false\n              this.$message.success('成功')\n            })\n          }\n        } else {\n          return false\n        }\n      })\n    },\n  },\n};\n",null]}